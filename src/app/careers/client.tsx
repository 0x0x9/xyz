
'use client';

import { useState } from 'react';
import { motion } from 'framer-motion';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { ArrowDown, Check, Code, Palette, Cpu, Megaphone, Send, Paperclip } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

const jobOpenings = [
  {
    id: 'software-engineer',
    title: 'Ing√©nieur logiciel / syst√®mes',
    icon: Code,
    description: "Le software, syst√®mes embarqu√©s, s√©curit√©‚Ä¶ Vous aimez coder propre, penser architecture et optimiser les performances ? Ce poste est taill√© pour vous.",
    requirements: [
      "Ma√Ætrise des langages de programmation (C/C++, Rust, Python ou autres)",
      "Bonne compr√©hension des syst√®mes d‚Äôexploitation et architectures mat√©rielles",
      "Connaissance en s√©curit√© informatique, drivers, gestion m√©moire, etc.",
      "Capacit√© √† concevoir des architectures logicielles robustes",
      "Exp√©rience avec Git, CI/CD",
    ],
  },
  {
    id: 'ux-ui-designer',
    title: 'UX/UI Designer',
    icon: Palette,
    description: "Vous savez allier esth√©tique et fonctionnalit√©, transformer l‚Äôabstrait en exp√©rience fluide, et donner une √¢me √† une interface.",
    requirements: [
      "Ma√Ætrise des outils de design (Figma, Sketch, Adobe XD‚Ä¶)",
      "Sens fort de l‚Äôesth√©tique et de l‚Äôergonomie",
      "Capacit√© √† concevoir des interfaces intuitives et coh√©rentes",
      "Compr√©hension du design syst√®me et des contraintes techniques",
      "Cr√©ation de prototypes interactifs",
    ],
  },
  {
    id: 'hardware-specialist',
    title: 'Sp√©cialiste Hardware',
    icon: Cpu,
    description: "L‚Äôoptimisation, l‚Äôassemblage, la conception mat√©rielle n'ont aucun secret pour vous ? Venez donner corps √† nos id√©es.",
    requirements: [
      "Connaissances solides en √©lectronique, architecture CPU/GPU, etc.",
      "Exp√©rience avec la conception, l‚Äôassemblage et la validation de prototypes",
      "Comp√©tences en test, diagnostic, d√©bogage mat√©riel",
      "Ma√Ætrise d‚Äôoutils comme Altium Designer, Eagle ou √©quivalent",
      "Go√ªt pour l‚Äôexp√©rimentation et la recherche de performance",
    ],
  },
    {
    id: 'communicator',
    title: 'Communicant',
    icon: Megaphone,
    description: "Strat√®ges, cr√©ateurs de contenu, experts en branding, RP ou marketing digital‚Ä¶ on veut que le monde entier entende parler de (X)yzz.",
    requirements: [
      "Excellentes capacit√©s r√©dactionnelles et storytelling",
      "Ma√Ætrise des canaux num√©riques (r√©seaux sociaux, newsletters, SEO/SEA)",
      "Cr√©ation de contenus engageants (vid√©o, visuel, blog‚Ä¶)",
      "Connaissance des outils de suivi (Analytics, CRM‚Ä¶)",
      "Capable de cr√©er une voix singuli√®re pour (X)yzz.",
    ],
  },
];

const whyUsPoints = [
  { title: "Impact", description: "Des projets qui ont du sens, tourn√©s vers l‚Äôavenir de la cr√©ation num√©rique." },
  { title: "Innovation", description: "L‚Äôopportunit√© de bousculer les standards √©tablis." },
  { title: "Culture", description: "Une √©quipe √† taille humaine, bienveillante et ambitieuse o√π vos id√©es comptent vraiment." },
];

export default function CareersClient() {
    const { toast } = useToast();
    const [cvFile, setCvFile] = useState<File | null>(null);

    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
        e.preventDefault();
        toast({
            title: "Candidature Envoy√©e !",
            description: "Merci pour votre int√©r√™t. Nous reviendrons vers vous tr√®s prochainement.",
        });
        e.currentTarget.reset();
        setCvFile(null);
    };

  return (
    <>
      {/* Intro Section */}
      <motion.section
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="text-center"
      >
        <h1 className="text-4xl md:text-6xl font-extrabold tracking-tight bg-clip-text text-transparent bg-gradient-to-b from-foreground to-foreground/70">
          Rejoindre (X)yzz.
        </h1>
        <p className="mt-6 max-w-3xl mx-auto text-lg md:text-xl text-muted-foreground">
          La r√©volution cr√©ative dans la tech ! üé® Chez (X)yzz., on ne suit pas les tendances, on les cr√©e. Nous recherchons des talents passionn√©s, un brin rebelles, et pr√™ts √† fa√ßonner le futur avec nous.
        </p>
      </motion.section>

      {/* Why Us Section */}
      <motion.section
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.2 }}
        className="my-24 md:my-32"
      >
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {whyUsPoints.map((point, index) => (
            <div key={index} className="text-center p-6">
              <h3 className="text-2xl font-bold text-primary">{point.title}</h3>
              <p className="text-muted-foreground mt-2">{point.description}</p>
            </div>
          ))}
        </div>
      </motion.section>

      {/* Openings Section */}
      <div id="openings" className="space-y-8">
        {jobOpenings.map((job, index) => (
            <motion.div
                key={job.id}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true, amount: 0.3 }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
            >
                <Card className="glass-card overflow-hidden">
                    <CardContent className="p-8 md:p-12 grid md:grid-cols-3 gap-8 items-center">
                        <div className="md:col-span-1">
                            <job.icon className="h-12 w-12 text-primary mb-4" />
                            <h3 className="text-2xl font-bold">{job.title}</h3>
                        </div>
                        <div className="md:col-span-2 space-y-4">
                            <p className="text-muted-foreground">{job.description}</p>
                            <ul className="space-y-2">
                                {job.requirements.map((req, i) => (
                                <li key={i} className="flex items-start gap-2 text-sm">
                                    <Check className="h-4 w-4 text-green-500 mt-0.5 shrink-0" />
                                    <span>{req}</span>
                                </li>
                                ))}
                            </ul>
                            <Button asChild variant="outline">
                                <a href="#apply-form">Postuler <ArrowDown className="ml-2 h-4 w-4"/></a>
                            </Button>
                        </div>
                    </CardContent>
                </Card>
            </motion.div>
        ))}
      </div>

       {/* Apply Form Section */}
      <motion.section
        id="apply-form"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5, delay: 0.4 }}
        className="mt-24 md:mt-32 max-w-4xl mx-auto"
      >
          <Card className="glass-card p-8 md:p-12">
            <CardHeader className="text-center p-0 mb-8">
                <CardTitle className="text-3xl md:text-4xl">Pr√™t¬∑e √† rejoindre l‚Äôaventure ?</CardTitle>
                <CardDescription>√âcrivez-nous et montrez-nous ce que vous avez dans le ventre.</CardDescription>
            </CardHeader>
            <CardContent className="p-0">
                <form onSubmit={handleSubmit} className="space-y-6">
                    <div className="grid grid-cols-1 sm:grid-cols-2 gap-6">
                        <div className="space-y-2"><Label htmlFor="firstname">Pr√©nom</Label><Input id="firstname" name="firstname" required /></div>
                        <div className="space-y-2"><Label htmlFor="lastname">Nom de famille</Label><Input id="lastname" name="lastname" required /></div>
                    </div>
                     <div className="grid grid-cols-1 sm:grid-cols-2 gap-6">
                        <div className="space-y-2"><Label htmlFor="email">E-mail</Label><Input id="email" type="email" name="email" required /></div>
                        <div className="space-y-2"><Label htmlFor="phone">T√©l√©phone</Label><Input id="phone" name="phone" type="tel" /></div>
                    </div>
                     <div className="grid grid-cols-1 sm:grid-cols-2 gap-6">
                        <div className="space-y-2">
                            <Label htmlFor="position">Poste auquel vous postulez</Label>
                            <Select name="position" required>
                                <SelectTrigger id="position"><SelectValue placeholder="Choisir le poste" /></SelectTrigger>
                                <SelectContent>
                                    {jobOpenings.map(job => <SelectItem key={job.id} value={job.id}>{job.title}</SelectItem>)}
                                    <SelectItem value="spontaneous">Candidature spontan√©e</SelectItem>
                                </SelectContent>
                            </Select>
                        </div>
                         <div className="space-y-2">
                            <Label htmlFor="start-date">Date de d√©but possible</Label>
                            <Input id="start-date" name="start-date" type="date" />
                        </div>
                    </div>
                    <div className="space-y-2">
                        <Label htmlFor="cv">Votre CV</Label>
                        <Input id="cv" name="cv" type="file" required accept=".pdf,.doc,.docx" onChange={(e) => setCvFile(e.target.files?.[0] || null)} className="hidden" />
                        <label htmlFor="cv" className="w-full flex items-center gap-2 p-3 rounded-lg border-2 border-dashed border-border cursor-pointer hover:border-primary hover:bg-primary/10">
                            <Paperclip className="h-5 w-5 text-muted-foreground" />
                            <span className="text-muted-foreground">{cvFile ? cvFile.name : "Cliquez pour choisir un fichier"}</span>
                        </label>
                    </div>
                    <div className="space-y-2">
                        <Label htmlFor="message">Un petit mot pour nous (optionnel)</Label>
                        <Textarea id="message" name="message" placeholder="Pourquoi nous ? Pourquoi vous ?" rows={4}/>
                    </div>
                    <div className="text-center pt-4">
                        <Button type="submit" size="lg">
                            <Send className="mr-2 h-5 w-5" />
                            Envoyer ma candidature
                        </Button>
                    </div>
                </form>
            </CardContent>
          </Card>
      </motion.section>
    </>
  );
}
