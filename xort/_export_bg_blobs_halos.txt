# Export migration du background, halos de lumière, blobs et éléments de base du site
# À donner à Gemini ou une IA pour reconstituer l'ambiance visuelle du site (background, halos, blobs, effets lumineux, glass, etc).
# Placez chaque bloc dans le bon fichier/dossier, selon les instructions.

---
# src/app/globals.css

[Début du code]

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 210 40% 98%; /* Light grey-blue */
    --foreground: 222 84% 4.9%; /* Dark blue */
    --card: 210 40% 98%; /* Same as background */
    --card-foreground: 222 84% 4.9%;
    --popover: 210 40% 98%;
    --popover-foreground: 222 84% 4.9%;
    --primary: 210 100% 50%; /* Blue */
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 91%; /* Lighter grey-blue */
    --secondary-foreground: 222 84% 4.9%;
    --muted: 210 40% 91%;
    --muted-foreground: 215 20.2% 45.1%; /* Grey */
    --accent: 210 100% 50%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 210 40% 82%;
    --input: 210 40% 89%;
    --ring: 222 84% 4.9%;
    --radius: 1rem;
  }

  .dark {
    --background: 222 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 224 71% 4%;
    --card-foreground: 210 40% 98%;
    --popover: 222 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 100% 50%;
    --primary-foreground: 210 40% 98%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 210 100% 50%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 210 100% 50%;
    --radius: 1rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

@layer base {
  /* Blobs, halos, orbs, glass, etc. Voir le code complet dans le fichier pour tous les effets visuels */
  .prism-light {
    position: absolute;
    border-radius: 50%;
    will-change: transform, opacity;
    filter: blur(100px);
    opacity: 0.35;
    aspect-ratio: 1;
  }
  /* ... (toutes les classes .prism-light, .glass-card, .header-logo-orb, .oria-orb, .dock-blobs, .orb, etc. et leurs animations) ... */
}

@layer components {
    .xos-dock {
        @apply fixed bottom-4 left-1/2 -translate-x-1/2 p-2;
        @apply flex items-center gap-2;
        @apply bg-clip-padding bg-white/5 dark:bg-black/10 backdrop-blur-xl;
        @apply border border-white/10 rounded-2xl;
        @apply shadow-2xl shadow-black/50;
    }
    .glass-orb-button {
      @apply relative w-16 h-16 rounded-full;
      @apply flex items-center justify-center;
      @apply bg-white/5 dark:bg-black/20 backdrop-blur-md border border-white/10;
      @apply hover:border-accent/50 focus:outline-none focus-visible:ring-2 focus-visible:ring-accent;
    }
    .animate-tool-progress {
        animation: tool-progress-animation 1.5s ease-out forwards;
    }
    @keyframes tool-progress-animation {
        from { width: 0%; }
        to { width: 100%; }
    }
}

[Fin du code]

---
# src/components/homepage-oria.tsx

[Début du code]

'use client';

import { useEffect, useState, useRef, useActionState } from 'react';
import { useFormStatus } from 'react-dom';
import { useRouter } from 'next/navigation';
import Image from 'next/image';
import Link from 'next/link';
import { oriaChatAction } from '@/app/actions';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { Send, ArrowRight, Copy, ZoomIn, Download, BadgeCheck, BadgeX, TerminalSquare, RotateCcw, Presentation, LayoutTemplate, Music, Wand2, Users, Film, Network, Lightbulb, FileText, Palette, Mic, AudioLines, Code2, Loader2 } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { cn } from '@/lib/utils';
import AiLoadingAnimation from '@/components/ui/ai-loading-animation';
import { useFusionDock } from '@/hooks/use-fusion-dock';
// ... (le code complet du composant homepage-oria.tsx suit ici, voir l'original pour tout le contenu)

[Fin du code]

---
# Instructions

- Placez le code CSS dans `src/app/globals.css` pour tous les effets de fond, blobs, halos, glass, etc.
- Placez le composant React principal d'accueil et d'orbe dans `src/components/homepage-oria.tsx`.
- Pour les blobs SVG animés, orbs, halos, etc., vérifiez les classes CSS `.prism-light`, `.glass-card`, `.header-logo-orb`, `.oria-orb`, `.dock-blobs`, `.orb` dans le CSS.
- Pour migrer l'ambiance, importez et appliquez ces classes dans vos layouts/pages Next.js.
- Si vous avez des composants manquants (comme xos-wallpaper, oria-xos, ou Background.tsx), créez-les en vous inspirant de ces styles et de la structure CSS fournie ici.
